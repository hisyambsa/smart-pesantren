<?php


class My_extend_tcpdf_1 extends TCPDF
{

    protected $watermark = FALSE;
    protected $watermark_text = 'PREVIEW';
    protected $kop_surat = FALSE;
    protected $uuid = FALSE;
    protected $version = FALSE;
    protected $footer = FALSE;



    public function __construct($orientation = 'P', $unit = 'mm', $format = 'A4', $unicode = true, $encoding = 'UTF-8', $diskcache = false, $pdfa = false, $watermark = false, $kop_surat = false, $uuid = false, $revisi_sistem = false, $version = '2.0', $footer = false, $watermark_text = false)
    {
        parent::__construct($orientation, $unit, $format, $unicode, $encoding, $diskcache, $pdfa);
        $this->watermark = $watermark;
        $this->kop_surat = $kop_surat;
        $this->uuid = $uuid;
        $this->revisi_sistem = $revisi_sistem;
        $this->version = $version;
        $this->footer = $footer;
        if ($watermark_text) {
            $this->watermark_text = $watermark_text;
        }
    }

    public function Header()
    {
        if ($this->kop_surat) {
            if ($this->page == 1) {
                $this->kop_surat();
            } else {
                //do nothing
            }
        }
        if ($this->watermark) {
            $this->watermark();
        }
        $this->verified();
        $this->qr_code();
    }
    public function qr_code()
    {
        if ($this->revisi_sistem) {
            $revisi_sistem = 'Revisi Sistem : ' . $this->revisi_sistem;
        } else {
            $revisi_sistem = NULL;
            // $revisi_sistem = 'Revisi Sistem  : ' . 'TEST';
        }
        if ($this->uuid) {
            $uuid = 'QR-CODE : ' . $this->uuid;
        } else {
            $uuid = NULL;
            // $uuid = 'QR-CODE : ' . 'TEST';
        }

        // Get the current page break margin
        $bMargin = $this->getBreakMargin();

        // Get current auto-page-break mode
        $auto_page_break = $this->AutoPageBreak;

        // Disable auto-page-break
        $this->SetAutoPageBreak(true, 1);

        // Define the path to the image that you want to use as watermark.

        $fontName = "Helvetica";
        $fontSize = 6;
        $fontStyle = "B";

        // Calcular ancho de la cadena
        $widthCadena = $this->GetStringWidth(trim("MY TEXT"), $fontName, $fontStyle);
        $factorCentrado = round(($widthCadena * sin(deg2rad(45))) / 2, 0);

        // Get the page width/height
        $myPageWidth = $this->getPageWidth();
        $myPageHeight = $this->getPageHeight();

        // Find the middle of the page and adjust.
        $myX = ($myPageWidth) - $factorCentrado - 1;
        $myY = ($myPageHeight) - $factorCentrado - 3;


        // Rotate 45 degrees and write the watermarking text
        $this->StartTransform();
        $this->Rotate(90, $myX, $myY);
        $this->SetFont($fontName, $fontStyle, $fontSize + 2);
        $this->Text($myX, $myY, $uuid);
        $this->SetFont($fontName, '', $fontSize);
        $this->Text($myX, $myY + 0.4, $revisi_sistem);
        $this->StopTransform();
        // Reset the transparency to default
        // Restore the auto-page-break status
        // $this->SetAutoPageBreak($auto_page_break, $bMargin);

        // Set the starting point for the page content
        $this->setPageMark();
    }
    public function verified()
    {
        // Get the current page break margin
        $bMargin = $this->getBreakMargin();

        // Get current auto-page-break mode
        $auto_page_break = $this->AutoPageBreak;

        // Disable auto-page-break
        $this->SetAutoPageBreak(true, 1);

        // Define the path to the image that you want to use as watermark.

        $fontName = "Helvetica";
        $fontSize = 6;
        $fontStyle = "B";

        // Calcular ancho de la cadena
        $widthCadena = $this->GetStringWidth(trim("MY TEXT"), $fontName, $fontStyle);
        $factorCentrado = round(($widthCadena * sin(deg2rad(45))) / 2, 0);

        // Get the page width/height
        $myPageWidth = $this->getPageWidth();
        $myPageHeight = $this->getPageHeight();

        // Find the middle of the page and adjust.
        $myX = ($myPageWidth / 2) - $factorCentrado - 10;
        $myY = ($myPageHeight) - $factorCentrado - 2;

        // Set the transparency of the text to really light
        $this->SetAlpha(0.09);

        // Rotate 45 degrees and write the watermarking text
        $this->StartTransform();
        $this->Rotate(90, $myX, $myY);
        $this->SetFont($fontName, $fontStyle, $fontSize);
        $this->Text($myX, $myY, 'DOKUMEN INI DIBUAT MENGGUNAKAN SISTEM - TERDAPAT QR-CODE YANG DAPAT DIVERIFIKASI | Generated by System Server: V-' . $this->version . ' / ' . date('r') . '');
        $this->StopTransform();
        // Reset the transparency to default
        $this->SetAlpha(1);
        // Restore the auto-page-break status
        // $this->SetAutoPageBreak($auto_page_break, $bMargin);

        // Set the starting point for the page content
        $this->setPageMark();
    }
    public function Footer()
    {
        if ($this->footer) {
            $this->generated();
        }
    }
    public function kop_surat()
    {
        $CI = &get_instance();
        $envi = (ENVIRONMENT == 'development') ? '/' . $CI->config->item('development_folder') : '';



        $image_location_lti = $_SERVER['DOCUMENT_ROOT'] .  $CI->config->item('envi') . '/gambar/logo_16-9.png';
        $image_location_defend_id = $_SERVER['DOCUMENT_ROOT'] .  $CI->config->item('envi') . '/gambar/logo_defend_id.png';
        $this->Image($image_location_lti, 14.5, 0, 4.8, 2.7, '', '', '', false, 300, '', false, false, 1, false, false, false);
        $this->Image($image_location_defend_id, 1, 0.4, 7.5, 1.5, '', '', '', false, 300, '', false, false, 1, false, false, false);

        $width_page = $this->getPageWidth();
        // $style = array('width' => 0.1, 'solid' => '2,2,2,2', 'phase' => 0, 'color' => array(0, 93, 167));
        // $this->Line(0.5, 2.6,  $width_page - 0.5, 2.6, $style);
        // $style = array('width' => 0.03, 'solid' => '2,2,2,2', 'phase' => 0, 'color' => array(0, 93, 167));
        // $this->Line(0.5, 2.7,  $width_page - 0.5, 2.7, $style);
    }
    public function watermark()
    {
        // Get the current page break margin
        $bMargin = $this->getBreakMargin();

        // Get current auto-page-break mode
        $auto_page_break = $this->AutoPageBreak;

        // Disable auto-page-break
        $this->SetAutoPageBreak(true, 1);

        // Define the path to the image that you want to use as watermark.

        $fontName = "Helvetica";
        $fontSize = 135;
        $fontStyle = "B";

        // Calcular ancho de la cadena
        $widthCadena = $this->GetStringWidth(trim("MY TEXT"), $fontName, $fontStyle);
        $factorCentrado = round(($widthCadena * sin(deg2rad(45))) / 2, 0);

        // Get the page width/height
        $myPageWidth = $this->getPageWidth();
        $myPageHeight = $this->getPageHeight();

        // Find the middle of the page and adjust.
        $myX = ($myPageWidth / 2) - $factorCentrado - 10;
        $myY = ($myPageHeight / 2) - $factorCentrado + 5;

        // Set the transparency of the text to really light
        $this->SetAlpha(0.09);

        // Rotate 45 degrees and write the watermarking text
        $this->StartTransform();
        $this->Rotate(45, $myX, $myY);
        $this->SetFont($fontName, $fontStyle, $fontSize);
        $this->Text($myX, $myY, trim($this->watermark_text));
        $this->StopTransform();
        // Reset the transparency to default
        $this->SetAlpha(1);
        // Restore the auto-page-break status
        // $this->SetAutoPageBreak($auto_page_break, $bMargin);

        // Set the starting point for the page content
        $this->setPageMark();
    }

    public function generated()
    {
        // $this->SetY(-1.65);
        // $this->SetFont('helvetica', 'N', 7);

        // $html = '<table style="border-collapse: collapse; width: 100%;  margin-left: auto; margin-right: auto;" border="0">
        //     <tbody>
        //         <tr style="width: 100%; color:"black";">
        //             <td style="width: 100%; text-align:left;">' . 'Menara MTH Lt.M, Suite M-02, Jl. Letjen MT Haryono Kav.23,  Jakarta 12820 <br> Telp. +62 21 2283 3872 / +62 81 1953 0600 Website: https://www.len-telko.co.id/ | Email : kontak@len-telko.co.id</td>
        //         </tr>
        //         <tr style="width: 100%; color:"black";">
        //             <td style="width: 100%; text-align:left;"></td>
        //         </tr>
        //         <tr style="width: 100%; color:"black";">
        //             <td style="width: 100%; text-align:left;"></td>
        //         </tr>
        //         <tr style="width: 100%; color:"black";">
        //             <td style="width: 100%; text-align:left;"></td>
        //         </tr>
        //     </tbody>
        // </table>';
        // // $html = '<p>Menara MTH Lt.M, Suite M-02, Jakarta 12820 | Telp. +62 21 8378 2445 Website: https://www.len-telko.co.id/ Marketing : Marketing@len-telko.co.id</p>';
        // $this->writeHTML($html, false, false, true, false, '');
        // $html = '<table style="border-collapse: collapse; width: 100%;  margin-left: auto; margin-right: auto;" border="0">
        //     <tbody>
        //         <tr style="width: 100%; color:"black";">
        //             <td style="width: 100%; text-align:left;">' . 'Certified: ISO 9001:2015, ISO 14001:2015, ISO 45001:2018</td>
        //         </tr>
        //     </tbody>
        // </table>';
        // $html = '<p>Certified: ISO 9001, ISO 14001, ISO 4500, SMK3</p>';
        // $this->writeHTML($html, false, false, true, false, 'C');

        $CI = &get_instance();

        $envi = (ENVIRONMENT == 'development') ? '/' . $CI->config->item('development_folder') : '';

        $image_location_footer = $_SERVER['DOCUMENT_ROOT'] .  $CI->config->item('envi') . '/gambar/footer_surat.png';
        $this->Image($image_location_footer, 0, 27.5, 21, 2, '', '', '', false, 300, '', false, false, 1, false, false, false);

        $this->setCellHeightRatio(1.25);
    }
}
